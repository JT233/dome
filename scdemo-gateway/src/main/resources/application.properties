spring.application.name=scdemo-gateway
spring.http.encoding.charset=UTF-8

server.port=8090
server.servlet.context-path=/
server.tomcat.uri-encoding=utf-8

# 网关本身作为一个服务，需要向注册中心注册
eureka.client.service-url.defaultZone=http://peer1:8761/eureka,http://peer2:8762/eureka
eureka.client.enabled=true

# ---------------- 路由配置 B -----------------
# 面向服务的路由配置，推荐，需要注册中心支持，如完全不配置路由则采用zuul的默认风格，即：采用服务名作为前缀。
#zuul.routes.fc.path=/api-fc/**
# service-id：注册中心的服务名，由每个服务的spring.application.name属性指定
#zuul.routes.fc.service-id=scdemo-feignconsumer

#zuul.routes.rc.path=/api-rc/**
#zuul.routes.rc.service-id=scdemo-rabbonconsumer

# url方式配置路由（传统方式）
# zuul.routes.<route>.path=/<route>/**
# zuul.routes.<route>.url=http://ip:port/
# 配置实例：
# zuul.routes.fc.path=/api-fc/**
# zuul.routes.fc.url=http://localhost:8083/
# ---------------- 路由配置 E -----------------

# url方式路由配置的超时时间
# 设置路由转发请求时间，创建请求连接的超时时间
#zuul.host.connect-timeout-millis=2000
# 设置路由转发请求时间, 请求连接建立后的处理时间
#zuul.host.socket-timeout-millis=6000

# service-id方式配置的超时时间
# 设置路由转发请求时间，创建请求连接的超时时间
ribbon.ConnectTimeout=2000
# 设置路由转发请求时间, 请求连接建立后的处理时间
ribbon.ReadTimeout=4000

# 启用熔断器
feign.hystrix.enable=true

# hystrix的超时时间，要比ribbon设置的超时间大，如果ribbon超时但hystrix未超时，
# 则zuul会启动重试功能（也可以通过）。超时时间单位是毫秒
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=10000

# 开启重试，默认值为false
zuul.retryable=true
spring.cloud.loadbalancer.retry.enabled=true

# 如果只针对指定的节点开始重试
# zuul.retryable=true
# zuul.routes.<routename>.retryable=true
# 例： zuul.routes.a-service.retryable=true

# 对当前实例的重试次数
ribbon.maxAutoRetries=1
# 切换实例的重试次数
ribbon.maxAutoRetriesNextServer=3

# 对所有操作请求都进行重试
ribbon.okToRetryOnAllOperations=true

# 配置zuul管理服务端点，配置后通过如下的链接查看zuul中的服务信息
# http://localhost:8090/actuator/routes/details
# 上面的8090端口号是zuul服务端口号
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always




